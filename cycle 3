program 1
Design a simple login page using relative layout

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/activity_main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#00CC99">
 
 
    <EditText
        android:id="@+id/text1"
        android:hint="Username"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="150dp"
        android:layout_marginLeft="18dp"
        android:layout_marginRight="18dp"
        android:padding="8dp"
        android:background="#fff" />
 
    <EditText
        android:id="@+id/text2"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginLeft="18dp"
        android:layout_marginRight="18dp"
        android:padding="8dp"
        android:background="#fff"
        android:hint="Password"
        android:layout_marginTop="12dp"
        android:layout_below="@+id/text1" />
 
    <Button
        android:id="@+id/b1"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Login"
        android:textColor="#00CC99"
        android:layout_below="@+id/text2"
        android:layout_marginTop="17dp"
        android:layout_alignStart="@+id/text2"
        android:layout_alignEnd="@+id/text2" />
 
    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/text3"
        android:textColor="#fff"
        android:text="Not a member?Sign up now"
        android:layout_below="@+id/b1"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="34dp" />
</RelativeLayout>

mainactivity.java
package com.codedost.loginscreen;
 
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
 
public class MainActivity extends AppCompatActivity {
 
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }
}
 
program 2
array adapter using list view

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout 
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">
  	
    <ListView
        android:id="@+id/simpleListView"
        android:layout_width="match_parent"
        android:layout_height="wrap_content" />
  
</RelativeLayout>

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout 
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">
  	
    <TextView
        android:id="@+id/itemTextView"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_gravity="center" />
  
</LinearLayout>

import android.os.Bundle;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import androidx.appcompat.app.AppCompatActivity;
  	
public class MainActivity extends AppCompatActivity {
  
    ListView simpleListView;
      
    // array objects
    String courseList[] = {"C-Programming", "Data Structure", "Database", "Py-thon",
                            "Java", "Operating System", "Compiler Design", "An-droid Development"};
  
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
          
        simpleListView = (ListView) findViewById(R.id.simpleListView);
          
        ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>(this,
                R.layout.item_view, R.id.itemTextView, courseList);
        simpleListView.setAdapter(arrayAdapter);
    }
}

program 3
Develop an application that toggle image using frame format.
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent" 
    android:layout_height="fill_parent">

 <ImageView
    android:id="@+id/imageview"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    android:scaleType="fitCenter"
    android:src="@drawable/piq1" />

<Button
    android:id="@+id/next"
    android:layout_width="wrap_content"
    android:layout_height="30dp"
    android:layout_marginBottom="15dp"
    android:layout_marginRight="10dp"
    android:layout_gravity="bottom|right"
    android:paddingTop="2dp"
    android:paddingBottom="2dp"
    android:background="@drawable/buttonback"
    android:textColor="#000000"
    android:text="Next" />

  </FrameLayout>
import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;

public class Piqlout extends Activity {
@Override
protected void onCreate(Bundle savedInstanceState) {
    // TODO Auto-generated method stub
    super.onCreate(savedInstanceState);
    setContentView(R.layout.piq);

    Button next= (Button) findViewById(R.id.next);


    if (next.getText().equals("Next")) {
    next.setOnClickListener(new View.OnClickListener() {

        @Override
        public void onClick(View v) {
            // TODO Auto-generated method stub
            ImageView img = (ImageView) findViewById(R.id.imageview);
            img.setImageResource(R.drawable.piq2);
            Button next= (Button) findViewById(R.id.next);
            next.setText("Prev");
        }
    });
    }
    if (next.getText().equals("Prev")){
    next.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            // TODO Auto-generated method stub
                 ImageView img = (ImageView)     findViewById(R.id.imageview);
                 img.setImageResource(R.drawable.piq1);
                 Button next= (Button) findViewById(R.id.next);
                 next.setText("Next");


        }
    });
    }
}

program 4
Demonstrate activity life cycle
<?xml version="1.0" encoding="utf-8"?>  
<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"  
    xmlns:app="http://schemas.android.com/apk/res-auto"  
    xmlns:tools="http://schemas.android.com/tools"  
    android:layout_width="match_parent"  
    android:layout_height="match_parent"  
    tools:context="example.javatpoint.com.activitylifecycle.MainActivity">  
  
    <TextView  
        android:layout_width="wrap_content"  
        android:layout_height="wrap_content"  
        android:text="Hello World!"  
        app:layout_constraintBottom_toBottomOf="parent"  
        app:layout_constraintLeft_toLeftOf="parent"  
        app:layout_constraintRight_toRightOf="parent"  
        app:layout_constraintTop_toTopOf="parent" />  
  
</android.support.constraint.ConstraintLayout>  

package example.javatpoint.com.activitylifecycle;  
import android.app.Activity;  
import android.os.Bundle;  
import android.util.Log;  
  
public class MainActivity extends Activity {  
  
    @Override  
    protected void onCreate(Bundle savedInstanceState) {  
        super.onCreate(savedInstanceState);  
        setContentView(R.layout.activity_main);  
        Log.d("lifecycle","onCreate invoked");  
    }  
    @Override  
    protected void onStart() {  
        super.onStart();  
        Log.d("lifecycle","onStart invoked");  
    }  
    @Override  
    protected void onResume() {  
        super.onResume();  
        Log.d("lifecycle","onResume invoked");  
    }  
    @Override  
    protected void onPause() {  
        super.onPause();  
        Log.d("lifecycle","onPause invoked");  
    }  
    @Override  
    protected void onStop() {  
        super.onStop();  
        Log.d("lifecycle","onStop invoked");  
    }  
    @Override  
    protected void onRestart() {  
        super.onRestart();  
        Log.d("lifecycle","onRestart invoked");  
    }  
    @Override  
    protected void onDestroy() {  
        super.onDestroy();  
        Log.d("lifecycle","onDestroy invoked");  
    }  
}

program 5
Taking camera and saving the picture

<manifest xmlns:android="http://schemas.android.com/apk/res/android"  
    package="com.chhavi.uploadingandviewimage"  
    android:versionCode="1"  
    android:versionName="1.0" >  
  <uses-permission android:name="android.permission.CAMERA" />  
  <uses-feature android:name="android.hardware.camera" />  
  <uses-feature android:name="android.hardware.camera.autofocus" />  
  <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />  
  <uses-sdk  
      android:minSdkVersion="7"  
      android:targetSdkVersion="16" />  
  <application  
      android:allowBackup="true"  
      android:icon="@drawable/ic_launcher"  
      android:label="@string/app_name"  
      android:theme="@style/AppTheme" >  
    <activity  
       android:name="com.chhavi.uploadingandviewimage.MainActivity"  
        android:label="@string/app_name" >  
      <intent-filter>  
        <action android:name="android.intent.action.MAIN" />  
        <category android:name="android.intent.category.LAUNCHER" />  
      </intent-filter>  
    </activity>  
  </application>  
</manifest>

  <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"  
              xmlns:tools="http://schemas.android.com/tools"  
              android:id="@+id/LinearLayout1"  
              android:layout_width="match_parent"  
              android:layout_height="match_parent"  
              android:orientation="vertical"  
              android:padding="10dp" >  
  <LinearLayout  
          android:layout_width="match_parent"  
          android:layout_height="wrap_content"  
          android:gravity="center"  
          android:padding="5dp" >  
    <Button  
            android:id="@+id/btnSelectPhoto"  
            android:layout_width="match_parent"  
            android:layout_height="wrap_content"  
            android:text="Select Photo" />  
  </LinearLayout>  
  <LinearLayout  
          android:layout_width="match_parent"  
          android:layout_height="match_parent"  
          android:orientation="vertical"  
          android:padding="10dp" >  
    <ImageView  
            android:id="@+id/viewImage"  
            android:layout_width="match_parent"  
            android:layout_height="wrap_content"  
            android:src="@drawable/camera" />  
  </LinearLayout>  
</LinearLayout>

  package com.chhavi.uploadingandviewimage;  
import android.app.AlertDialog;  
import android.content.DialogInterface;  
import android.content.Intent;  
import android.database.Cursor;  
import android.graphics.Bitmap;  
import android.graphics.BitmapFactory;  
import android.net.Uri;  
import android.os.Bundle;  
import android.app.Activity;  
import android.os.Environment;  
import android.provider.MediaStore;  
import android.util.Log;  
import android.view.Menu;  
import android.view.View;  
import android.widget.Button;  
import android.widget.ImageView;  
import java.io.File;  
import java.io.FileNotFoundException;  
import java.io.FileOutputStream;  
import java.io.IOException;  
import java.io.OutputStream;  
  
public class MainActivity extends Activity {  
    ImageView viewImage;  
    Button b;  
    @Override  
    protected void onCreate(Bundle savedInstanceState) {  
        super.onCreate(savedInstanceState);  
        setContentView(R.layout.activity_main);  
        b=(Button)findViewById(R.id.btnSelectPhoto);  
        viewImage=(ImageView)findViewById(R.id.viewImage);  
        b.setOnClickListener(new View.OnClickListener() {  
            @Override  
            public void onClick(View v) {  
                selectImage();  
            }  
        });  
    }  
    @Override  
    public boolean onCreateOptionsMenu(Menu menu) {  
        // Inflate the menu; this adds options to the action bar if it is present.  
        getMenuInflater().inflate(R.menu.main, menu);  
        return true;  
    }  
      private void selectImage() {  
        final CharSequence[] options = { "Take Photo", "Choose from Gallery","Cancel" };  
        AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);  
        builder.setTitle("Add Photo!");  
        builder.setItems(options, new DialogInterface.OnClickListener() {  
            @Override  
            public void onClick(DialogInterface dialog, int item) {  
                if (options[item].equals("Take Photo"))  
                {  
                    Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);  
                    File f = new File(android.os.Environment.getExternalStorageDirectory(), "temp.jpg");  
                    intent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(f));  
                    startActivityForResult(intent, 1);  
                }  
                else if (options[item].equals("Choose from Gallery"))  
                {  
                    Intent intent = new   Intent(Intent.ACTION_PICK,android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);  
                    startActivityForResult(intent, 2);  
                }  
                else if (options[item].equals("Cancel")) {  
                    dialog.dismiss();  
                }  
            }  
        });  
        builder.show();  
    }  
    @Override  
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {  
        super.onActivityResult(requestCode, resultCode, data);  
        if (resultCode == RESULT_OK) {  
            if (requestCode == 1) {  
                File f = new File(Environment.getExternalStorageDirectory().toString());  
                for (File temp : f.listFiles()) {  
                    if (temp.getName().equals("temp.jpg")) {  
                        f = temp;  
                        break;  
                    }  
                }  
                try {  
                    Bitmap bitmap;  
                    BitmapFactory.Options bitmapOptions = new BitmapFactory.Options();  
                    bitmap = BitmapFactory.decodeFile(f.getAbsolutePath(),  
                            bitmapOptions);   
                    viewImage.setImageBitmap(bitmap);  
                    String path = android.os.Environment  
                            .getExternalStorageDirectory()  
                            + File.separator  
                            + "Phoenix" + File.separator + "default";  
                    f.delete();  
                    OutputStream outFile = null;  
                    File file = new File(path, String.valueOf(System.currentTimeMillis()) + ".jpg");  
                    try {  
                        outFile = new FileOutputStream(file);  
                        bitmap.compress(Bitmap.CompressFormat.JPEG, 85, outFile);  
                        outFile.flush();  
                        outFile.close();  
                    } catch (FileNotFoundException e) {  
                        e.printStackTrace();  
                    } catch (IOException e) {  
                        e.printStackTrace();  
                    } catch (Exception e) {  
                        e.printStackTrace();  
                    }  
                } catch (Exception e) {  
                    e.printStackTrace();  
                }  
            } else if (requestCode == 2) {  
                Uri selectedImage = data.getData();  
                String[] filePath = { MediaStore.Images.Media.DATA };  
                Cursor c = getContentResolver().query(selectedImage,filePath, null, null, null);  
                c.moveToFirst();  
                int columnIndex = c.getColumnIndex(filePath[0]);  
                String picturePath = c.getString(columnIndex);  
                c.close();  
                Bitmap thumbnail = (BitmapFactory.decodeFile(picturePath));  
                Log.w("path of image from gallery......******************.........", picturePath+"");  
                viewImage.setImageBitmap(thumbnail);  
            }  
        }  
    }  
}

